# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg

# PyInstaller
# Usually these files are written by a python script from a template
# before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# IPython Notebook
.ipynb_checkpoints

# pyenv
.python-version

# pipenv
# According to https://pipenv.pypa.io/en/latest/advanced/#fancy-installations, you should consider adding Pipfile.lock.
# However, in case of library conflicts and other dependency issues, you might want to include it
# so that the problem can be reproduced on other environments, and thus debugged.
Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Jupyter Notebook
# .ipynb_checkpoints/
# *.ipynb

# IPython
# .ipython/

# pyenv
# .python-version

# pipenv
.venv/
.env/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# Sublime Text
# *.sublime-project
# *.sublime-workspace

# Visual Studio Code
.vscode/

# Atom
# .atom/

# IntelliJ IDEA
# .idea/

# PyCharm
# .pycharm/

# JupyterLab
# .jupyter/

# virtualenv
# venv/
# env/
# ENV/

# macOS
# .DS_Store

# Windows
# Thumbs.db
# ehthumbs.db
